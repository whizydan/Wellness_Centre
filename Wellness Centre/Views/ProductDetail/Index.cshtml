@{
    Layout = "_Customer";
    ViewData["Title"] = "Products";
    ViewData["page_title"] = "Products Detail";
}

<style>
    .card-img-top {
        height: 200px; /* Adjust the height as needed */
        object-fit: cover; /* Ensure the image covers the entire area */
    }
</style>

<div class="row card-body">
    <img id="image" src="~/assets/img/logo.png" class="card-img-top"/>
</div>
<div class="card">
    <p id="description" class="card-body"></p>
    <div class="card-footer">
        <form id="form" method="post" enctype="application/x-www-form-urlencoded">
            <div class="form-check">
                <input hidden id="id" name="id" />
                <input hidden id="price" name="price" />
                <input placeholder="Quantity" required min="1" type="number" name="qty" class="form-control" />
            </div><br />
            <input type="submit" class="btn btn-primary form-control"/>
        </form>
    </div>
</div>

<script>
    function getCookieValue(cookieName, fieldName) {
        // Get the cookie value by name
        const cookieString = document.cookie;
        const cookies = cookieString.split('; ');

        for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i].split('=');
            if (cookie[0] === cookieName) {
                const cookieData = JSON.parse(decodeURIComponent(cookie[1]));
                return cookieData[fieldName];
            }
        }

        return null; // Return null if cookie or field not found
    }

    function getParam(name) {
        name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
        const regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
        const results = regex.exec(location.search);
        return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
    }
    const userId = getCookieValue('user','id');
    const id = getParam('id');
    const description = document.getElementById('description');
    const image = document.getElementById('image');
    const price = document.getElementById('price');
    const productId = document.getElementById('id');

    fetch(`http://localhost:8000/product/${id}`, {
        method: 'GET'
    })
        .then(response => {
            return response.json();
        })
        .then(data => {
            console.log(data);
            const item = data['reponse'][0];
            description.innerHTML = item.description;
            image.src = "http://localhost:8000/" + item.image;
            price.value = item.price;
            productId.value = item.id;
        })
        .catch(error => {
            console.error('Error:', error);
            // Handle errors if any
        });

    function handleSubmit(event) {
        event.preventDefault(); // Prevent the default form submission

        const form = document.getElementById('form');
        const formData = new URLSearchParams(new FormData(form)); // Create URL-encoded form data

        fetch(`http://localhost:8000/Product/${userId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: formData, // Send the URL-encoded form data
        })
            .then(response => response.json())
            .then(data => {
                console.log(data);
                if(data['reponse'] == '0'){
                    Swal.fire('Added to cart');
                }else {
                    Swal.fire('Could not add to cart');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                // Handle errors if any
            });
    }

    // Add event listener to form submission
    const form = document.getElementById('form');
    form.addEventListener('submit', handleSubmit);
</script>